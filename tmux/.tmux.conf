# 配置 24-bit True-color(Tc), more info in this PR:
#   https://github.com/tmux/tmux/pull/112

set -s default-terminal 'tmux-256color'
set -sa terminal-overrides 'xterm-256color:RGB'
set -sa terminal-overrides 'alacritty:RGB'

set -g focus-events on

# set -g default-terminal "alacritty-256color"
# set -ga terminal-overrides ',*256col*:Tc'
# set -sa terminal-overrides ',xterm-256color:RGB'
# set -ga terminal-overrides ",xterm-256color:Tc"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -ga terminal-overrides ",*256col*:Tc"
# 配置使用ctrl+g作为命令引导键(默认为ctrl+a)

# -- prefix
set -g prefix C-g

# 这是 ctrl + ,
set -g prefix2 C-S-F11
bind C-S-F11 send-keys C-S-F11

# Use vim keybindings in copy mode
setw -g mode-keys vi


# Set default shell to zsh
# 会直接用 login shell
# set-option -g default-shell /bin/zsh
#

## Join windows: <prefix> s, <prefix> j
bind-key M-j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key M-s command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key S choose-session
bind-key T break-pane

# pane navigation
bind L swap-pane -D
bind H swap-pane -U
# bind | swap-pane
# bind H swap-pane -d
# bind H swap-pane -L  # 不可用，只有上下
# bind L swap-pane -R # 不可用，只有上下
# bind L swap-pane -Z

# pane border
# set -g pane-border-fg colour189
#set-option -g pane-border-style "fg=colour240" #base02
set-option -g pane-border-style "fg=black" #base02
set-option -g pane-active-border-style "fg=blue" #base02
#set-option -g pane-active-border-style "" #base02
# set -g pane-border-bg black

# 设置当前窗口分割的边框颜色
# set -g pane-active-border-fg white
# set -g pane-active-border-bg colour208
#

set-window-option -g mouse on

# 监视窗口信息，如有内容变动，进行提示
setw -g monitor-activity on
set -g visual-activity on

# 窗口号和窗口分割号都以1开始（默认从0开始）
set -g base-index 1
setw -g pane-base-index 1


# 加载tmux配置文件的快捷键
bind r source-file ~/.tmux.conf\; display "Reloaded!"
# 快捷键查看man
# bind / command-prompt "split-window 'exec man %%'"
unbind "%"
unbind "\""
unbind "t"
unbind "c"
bind-key -T prefix 't' new-window -c "#{pane_current_path}"
bind-key -T prefix 'C-T' new-window
# 修改默认的窗口分割快捷键，使用更直观的符号
# 需要在 \ 前面使用 \ 转义
# bind-key "\\" split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind-key "v" split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind-key x split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind-key s split-window -v -c '#{pane_current_path}'  # Split panes vertically

# 选择窗口功能修改为和Screen一样的C-a "
bind "\'" choose-window

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key Escape copy-mode # enter copy mode (prefix Escape)
bind-key -T copy-mode-vi 'V' send-keys -X select-line
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi i send-keys -X select-word
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# -- clipboard
# bind -T copy-mode-vi Enter send-keys -X copy-pipe

bind b list-buffers

# -- misc options
set -g mouse on
set -g history-limit 10000
# set -g editor 'vim'
set -g repeat-time 300
set -g visual-activity off
set -wg monitor-activity off
set -wg monitor-bell off

#bind -t vi-copy <Space> page-down
#bind -t vi-copy <C-@> page-up
bind-key -T copy-mode-vi 'Space' send-keys -X page-down
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi 'C-Space' send-keys -X page-up
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
#bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
#bind-key -T copy-mode-vi 'Escape' send-keys -X cancel
bind-key -T prefix 'p' paste-buffer
#bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-selection
# Setup 'v' to begin selection as in Vim
# Make sure you have the "Applications in terminal may access clipboard" option set when using iTerm2

# tmux-jump config
# 颜色
set -g @jump-bg-color '\e[0m\e[90m'
set -g @jump-fg-color '\e[1m\e[31m'
# Vimium/Easymotion like navigation for tmux
# 设置🔍快捷键为 prefix f
set -g @jump-key 'f'
# WARNING: set -g @jump-key 'q' 必须在 bind j select-pane -D 前面
run-shell ~/.tmux/plugins/tmux-jump/tmux-jump.tmux

# 选择窗口分割快捷键
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 选择窗口快捷键
bind -r M-h select-window -t :-
bind -r M-l select-window -t :+
# 移动窗口快捷键
# bind-key -n M-H swap-window -t -1
# bind-key -n M-L swap-window -t +1
# ------ for tmus 3.0+
# 加 -n 就不用前缀了
# bind-key -n M-H swap-window -t -1\; select-window -t -1
# bind-key -n M-L swap-window -t +1\; select-window -t +1
bind-key M-H swap-window -t -1\; select-window -t -1
bind-key M-L swap-window -t +1\; select-window -t +1

# 调节窗口大小快捷键
# pane resizing
# bind -n C-S-F11 resize-pane -Z
# bind C-S-F11 send-keys C-S-F11
bind -r + resize-pane -D 3
bind -r - resize-pane -U 3
bind -r < resize-pane -L 3
bind -r > resize-pane -R 3

# 快捷记录窗口内的内容到文件中
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"


# List olugins
# # Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'  # 插件管理器
set -g @plugin 'tmux-plugins/tmux-resurrect'  # 起死回生
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'laktak/extrakto'

set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'GROG/tmux-plugin-mem'

# set -g @mem_custom_percentage "$HOME/.tmux/plugins/tmux-plugin-mem/scripts/mem_percentage.sh"

set -g @plugin 'tmux-plugins/tmux-cpu'
# https://zhuanlan.zhihu.com/p/47801331
# 包括 ncurses 库都是根据一个超时（默认一秒）来判断用户到底是单独按下了 ESC 键，还>    是按下了一个功能键，如果是按下一个功能键，后面的控制字符串应该很快一起发送过来，如>    果超时了，就判断为单独按下 ESC。
set-option -g escape-time 40

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUlugin manager.
# ReadMe: https://github.com/tmux-plugins/tpm
# Keep this line at the very bottom of tmux.conf.
run '~/.tmux/plugins/tpm/tpm'

#### COLOUR (Solarized dark)

# 把 status line 放在 top 上
set-option -g status-position top

# default statusbar colors
#colour136
#set-option -g status-style fg=blue,bg=colour235
set-option -g status-style fg=colour98,bg=colour235
# set -g status-style "bg=#00346e, fg=#ffffd7"   # tomorrow night blue, base
#set-option -g message-command-style fg=yellow,bold,underscore,blink
#set-option -g message-command-style bg=black,fg=default,noreverse
#set-option -g message-command-style bg=#abcdef,fg=yellow, noreverse
set -g message-style "bg=#00345e, fg=#ffffd7"        # tomorrow night blue, base3
set-window-option -g monitor-activity on
set-window-option -g bell-action any
# 设置状态栏左部宽度
set -g status-left-length 40
# 设置状态栏显示内容和内容颜色。这里配置从左边开始显示，使用绿色显示session名称，黄色显示窗口号，蓝色显示窗口分割号
#set -g status-left "#[fg=colour52]#S #[fg=yellow]#I #[fg=cyan]#P"
# set -g status-left "#[bg=#00343e]#[fg=colour99] ❐ 📝 #S "       # blue
set -g status-left "#[bg=#00343e]#[fg=colour99] ❐ #S "       # blue
# 设置状态栏右部宽度
set -g status-right-length 100
# 设置状态栏右边内容，这里设置为时间信息
# set -g status-right '#[fg=colour243]CPU:#{cpu_percentage} | #{battery_icon} #{battery_percentage}  %Y-%m-%d #[fg=colour2]%H:%M #[fg=colour243]周%a '
set -g status-right '#[fg=colour243]CPU:#{cpu_percentage} | #{battery_icon} #{battery_percentage}  %Y-%m-%d #[fg=colour2]%H:%M '
#set -g status-right 'CPU:#{cpu_percentage} | Battery: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
# 窗口信息居中显示
set -g status-justify centre

# source /usr/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange
## clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=green #base02, red

# 显示 cpu and battery
run-shell ~/.tmux/plugins/tmux-battery/battery.tmux
run-shell ~/.tmux/plugins/tmux-cpu/cpu.tmux


#run-shell ~/.tmux/plugins/tmux-urlview/urlview.tmux
run-shell ~/.tmux/plugins/tmux-open/open.tmux

# 快捷调整窗口分割到全屏
unbind u
bind u new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind n
bind n last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

set -g @extrakto_fzf_tool "$HOME/.fzf/bin/fzf"
set -g @extrakto_split_size "15"
# set -g @extrakto_clip_tool "xclip -selection clipboard"
set -g @extrakto_copy_key 'tab'
set -g @extrakto_insert_key	'enter'

# set -g @yank_selection_mouse 'clipboard'

#set -g @urlview-key 'i'
set -g @open-S 'https://www.google.com/search?q='
set -g @open 'x'
set -g @open-editor 'C-x'
